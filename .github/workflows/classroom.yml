name: Autograding Tests
'on':
- push
- repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run tests
      id: run-tests
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Run tests
        setup-command: ''
        command: python3 -m unittest discover -s Tests
        timeout: 10
    - name: Coverage report
      id: coverage-report
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Coverage report
        setup-command: python -m pip install --upgrade pip; pip install coverage
        command: python3 -m coverage run --source production -m unittest discover
          Tests; python3 -m coverage report -m
        timeout: 10
    - name: Style checker - tests
      id: style-checker-tests
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Style checker - tests
        setup-command: python -m pip install --upgrade pip; pip install pylint
        command: pylint --disable=import-error Tests/test_production.py
        timeout: 10
    - name: Style checker - production
      id: style-checker-production
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Style checker - production
        setup-command: python -m pip install --upgrade pip; pip install pylint
        command: pylint --disable=import-error production.py
        timeout: 10
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        RUN-TESTS_RESULTS: "${{steps.run-tests.outputs.result}}"
        COVERAGE-REPORT_RESULTS: "${{steps.coverage-report.outputs.result}}"
        STYLE-CHECKER-TESTS_RESULTS: "${{steps.style-checker-tests.outputs.result}}"
        STYLE-CHECKER-PRODUCTION_RESULTS: "${{steps.style-checker-production.outputs.result}}"
      with:
        runners: run-tests,coverage-report,style-checker-tests,style-checker-production
